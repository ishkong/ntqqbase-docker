name: Build and Push Docker Base Images

on:
  push:
    paths:
      - 'qq_version/**'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  parse:
    runs-on: ubuntu-latest
    outputs:
      entries: ${{ steps.parse.outputs.entries }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Ensure jq is installed
        run: |
          if ! command -v jq &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y jq
          fi

      - name: Determine Changed Files or All Files
        id: parse
        shell: bash
        run: |
          set -e
          entries_json="[]"
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "Triggered by push event. Processing changed files."
            git fetch --depth=2 origin ${{ github.ref }}
            changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- qq_version/*.txt)
            if [ -z "$changed_files" ]; then
              echo "No changed files in qq_version directory."
            else
              for file in $changed_files; do
                if [[ -f "$file" ]]; then
                  version=$(basename "$file" .txt)
                  hash=$(cat "$file")
                  entry="{\"version\": \"$version\", \"hash\": \"$hash\"}"
                  entries_json=$(echo "$entries_json" | jq ". + [ $entry ]")
                fi
              done
            fi
          else
            echo "Triggered by manual event. Processing all files."
            for file in qq_version/*.txt; do
              if [[ -f "$file" ]]; then
                version=$(basename "$file" .txt)
                hash=$(cat "$file")
                entry="{\"version\": \"$version\", \"hash\": \"$hash\"}"
                entries_json=$(echo "$entries_json" | jq ". + [ $entry ]")
              fi
            done
          fi
          echo "entries_json is: $entries_json"
      
          entries_json=$(echo "$entries_json" | jq -c '.')
      
          echo "entries=$entries_json" >> $GITHUB_OUTPUT 

  build:
    needs: parse
    if: ${{ toJson(needs.parse.outputs.entries || '[]').length > 0 }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        entry: ${{ toJson(needs.parse.outputs.entries || '[]') }}
        platform: [amd64, arm64]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/${{ matrix.platform }}
          build-args: |
            VERSION=${{ matrix.entry.version }}
            HASH=${{ matrix.entry.hash }}
            ARCH=${{ matrix.platform }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/ntqqbase:${{ matrix.entry.version }}${{ matrix.platform == 'arm64' && '-arm64' || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
